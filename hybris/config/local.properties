
# place your custom properties into this file instead of modifying the project.properties
# all properties in this file have higher priority and will overwrite the platform/project.properties settings.

environment.id=common

tomcat.javaoptions=-Xmx3G -Xms3G -XX:MaxMetaspaceSize=300m -XX:+UseConcMarkSweepGC -XX:NewRatio=1 -XX:CMSInitiatingOccupancyFraction=85 -Xloggc:${HYBRIS_LOG_DIR}/java_gc.log -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000
maven.update.dbdrivers=false
build.parallel=true
#hac.webroot=/hac

website.pentland.http=http\://pentland.local\:9001/pentlandstorefront
website.pentland.https=https\://pentland.local\:9002/pentlandstorefront

###########
# Qualified media URLs for each CMSWebSite used to load images and other media
media.pentland.http=http\://pentland.local\:9001/pentlandstorefront
media.pentland.https=http\://pentland.local\:9002/pentlandstorefront

imagemagick.bindir=D:\\Distr\\ImageMagick-7.0.6-Q16
imagemagick.configuration.directory=D:\\Distr\\ImageMagick-7.0.6-Q16

commerceservices.quote.seller.usergroup.uid=salesemployeegroup
commerceservices.quote.seller.approver.usergroup.uid=salesapprovergroup

europe1.cache.taxes=false

quote.request.initiation.threshold.powertools.GBP=2500

############
# Quote seller approval auto approval threshold with respect to specified site and currency.
# This site and currency specific threshold supercedes commerceservices.quote.seller.auto.approval.threshold value
commerceservices.quote.seller.auto.approval.threshold.powertools.GBP=7500


# sonar
sonar.language=java
sonar.projectName=ALF
sonar.projectKey=ALF
sonar.projectVersion=1.0
sonar.excludedExtensions=acceleratorcms,acceleratorfacades,acceleratorservices,acceleratorstorefrontcommons,addonsupport,captchaaddon,commercefacades,platformservices,platform,core,testweb,scripting,paymentstandard,mediaweb,maintenanceweb,deliveryzone,commons,processing,impex,validation,catalog,europe1,workflow,oauth2,hac,comments,advancedsavedquery,embeddedserver,atddengine,voucher,tomcatembeddedserver,promotions,atddimpex,virtualjdbc,springintegrationlibs,ruleengine,ordercalculation,customerreview,permissionsfacades,cockpit,reportcockpit,npmancillary,backoffice,platformbackoffice,voucherbackoffice,promotionsbackoffice,solrfacetsearch,backofficesolrsearch,admincockpit,pcmbackoffice,ticketsystembackoffice,productcockpit,adaptivesearch,basecommerce,payment,basecommercebackoffice,commerceservices,personalizationservices,personalizationfacades,commerceservicesatddtests,ticketsystem,assistedserviceservices,assistedservicefacades,cscockpit,cms2,cms2lib,cmsfacades,personalizationcms,ruleengineservices,ruledefinitions,ruleenginebackoffice,cmscockpit,webservicescommons,commercewebservicescommons,personalizationwebservices,smartedit,ordermanagementfacades,customerticketingfacades,textfieldconfiguratortemplateservices,textfieldconfiguratortemplatefacades,b2bcommerce,b2bapprovalprocess,b2bacceleratorservices,b2bcommercefacades,b2bapprovalprocessfacades,b2bacceleratorfacades,groovynature,previewwebservices,sapcore,sapcoretest,datahubbackoffice,datahubadapter,sapcoreconfiguration,sapcoreconfigurationbackoffice,sapmodel,sapcustomerb2b,sapcustomerb2bbackoffice,sapmodelbackoffice,pcmbackofficesamplesaddon,textfieldconfiguratortemplateatddtests,assistedserviceatddtests,personalizationservicesbackoffice,personalizationcmsbackoffice,personalizationcmsweb,previewpersonalizationweb,assistedservicewebservices,assistedservicestorefront,cmssmartedit,smarteditaddon,permissionswebservices,smarteditwebservices,personalizationsmartedit,cmswebservices,cmssmarteditwebservices,textfieldconfiguratortemplateaddon,textfieldconfiguratortemplatebackoffice,droolsruleengineservices,ruleengineatddtests,promotionengineservices,couponservices,promotionengineatddtests,promotionenginesamplesaddon,couponfacades,promotionenginebackoffice,personalizationpromotions,personalizationpromotionsbackoffice,personalizationpromotionsweb,personalizationsampledataaddon,couponbackoffice,rulebuilderbackoffice,customerticketingaddon,commerceorgsamplesaddon,commerceorgaddon,b2bacceleratoraddon,acceleratorwebservicesaddon,solrserver,yacceleratorcore,yacceleratorfacades,powertoolsstore,orderselfserviceaddon,ycommercewebservices,ycommercewebservicestest,yacceleratorfulfilmentprocess,yacceleratorinitialdata,yacceleratorcockpits,b2badmincockpit,solrfacetsearchbackoffice,commerceservicesbackoffice,customersupportbackoffice,b2bcommercebackoffice,adaptivesearchsamplesaddon,yb2bacceleratorstorefront,adaptivesearchbackoffice,adaptivesearchsolr,mcc
sonar.extensions=pentlandstorefront,pentlandtest,pentlandinitialdata,pentlandfulfilmentprocess,pentlandfacades,pentlandcore,pentlandcockpits
sonar.jdbc.url=jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true&useConfigs=maxPerformance


# worldpay
worldpaymerchantconfig.pentland=worldpayMerchantConfiguration


installed.tenants=

# the user type for newly created user in hybris
sso.mapping.asagent.usertype=Employee
# the user group mapping that is valid in hybris
sso.mapping.asagent.groups=asagentsalesmanagergroup
sso.usergroup.attribute.key=usergroup
sso.firstname.attribute.key=FirstName
sso.lastname.attribute.key=LastName
sso.userid.attribute.key=EmailAddress
sso.cookie.name=samlPassThroughToken
# location of the samelKeystore file
#sso.keystore.location=classpath:security/samlKeystore.jks
# password of the keystore, changeit by default
#sso.keystore.password=changeit
# default priate key alias shipped within samlkeysotre
#sso.keystore.privatekey.alias=hybris
# private key password
#sso.keystore.privatekey.password=changeit
# alias for the default certificate
#sso.keystore.default.certificate.alias=hybris
# the location of the metadata file which holds the IDP info
#sso.metadata.location=classpath:security/metadata.xml
# the entity id to identity our service provider
#sso.entity.id=urn:ssoextension:hybris:de

# Batch import
acceleratorservices.batch.impex.max-threads=1
acceleratorservices.batch.impex.basefolder=${HYBRIS_DATA_DIR}/acceleratorservices/import
acceleratorservices.export.basefolder=${HYBRIS_DATA_DIR}/acceleratorservices/export
hotfolder.autostart=true

impex.legacy.scripting=false

erp.integration.int_sync_04.url=http://localhost:8000/test3