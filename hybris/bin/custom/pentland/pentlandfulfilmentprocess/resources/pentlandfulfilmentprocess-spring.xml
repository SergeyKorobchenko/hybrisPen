<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
           
    <context:annotation-config/> 

	<!-- Listeners -->
	
	<bean id="pickupConfirmationEventListener" class="com.bridgex.fulfilmentprocess.listeners.PickupConfirmationEventListener" parent="abstractEventListener">
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<!-- Process Adapters -->

	<alias name="mockProcess2WarehouseAdapter" alias="process2WarehouseAdapter"/>
	<bean id="mockProcess2WarehouseAdapter" class="com.bridgex.fulfilmentprocess.warehouse.MockProcess2WarehouseAdapter" >
		<property name="modelService" ref="modelService"/>
		<property name="warehouse2ProcessAdapter" ref="warehouse2ProcessAdapter"/>
		<property name="timeService" ref="timeService"/>
	</bean>

	<alias name="defaultWarehouse2ProcessAdapter" alias="warehouse2ProcessAdapter"/>
	<bean id="defaultWarehouse2ProcessAdapter" class="com.bridgex.fulfilmentprocess.warehouse.DefaultWarehouse2ProcessAdapter" >
		<property name="modelService" ref="modelService"/>
		<property name="statusMap">
			<map key-type="de.hybris.platform.warehouse.WarehouseConsignmentStatus" value-type="de.hybris.platform.commerceservices.enums.WarehouseConsignmentState">
				<entry key="CANCEL" value="CANCEL"/>
				<entry key="COMPLETE" value="COMPLETE"/>
				<entry key="PARTIAL" value="PARTIAL"/>
			</map>
		</property>
		<property name="businessProcessService" ref="businessProcessService"/>
	</bean>
	
	<!-- B2B Process Definitions -->

	<bean id="b2bOrderProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/pentlandfulfilmentprocess/process/b2b-order-process.xml"/>
	</bean>

	<bean id="b2bConsignmentProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/pentlandfulfilmentprocess/process/b2b-consignment-process.xml"/>
	</bean>

	<bean id="b2bReturnProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/pentlandfulfilmentprocess/process/b2b-return-process.xml"/>
	</bean>

	<!-- B2C Process Definitions -->

	<bean id="b2cOrderProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/pentlandfulfilmentprocess/process/b2c-order-process.xml"/>
	</bean>

	<bean id="b2cConsignmentProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/pentlandfulfilmentprocess/process/b2c-consignment-process.xml"/>
	</bean>

	<bean id="b2cReturnProcessDefinitionResource" class="de.hybris.platform.processengine.definition.ProcessDefinitionResource" >
		<property name="resource" value="classpath:/pentlandfulfilmentprocess/process/b2c-return-process.xml"/>
	</bean>

	<!-- B2B Process Actions -->

	<import resource="/pentlandfulfilmentprocess/process/b2b-order-process-spring.xml"/>
	<import resource="/pentlandfulfilmentprocess/process/b2b-consignment-process-spring.xml"/>
	<import resource="/pentlandfulfilmentprocess/process/b2b-return-process-spring.xml"/>

	<!-- B2C Process Actions -->

	<import resource="/pentlandfulfilmentprocess/process/b2c-order-process-spring.xml"/>
	<import resource="/pentlandfulfilmentprocess/process/b2c-consignment-process-spring.xml"/>
	<import resource="/pentlandfulfilmentprocess/process/b2c-return-process-spring.xml"/>

	<!-- Order Check Service -->
	<!-- Performs some basic validation for the order as part of the first stage of the process. -->

	<alias name="defaultCheckOrderService" alias="checkOrderService"/>
	<bean id="defaultCheckOrderService" class="com.bridgex.fulfilmentprocess.impl.DefaultCheckOrderService" />
	
	<!-- Order Splitting -->
	<alias name="pentlandfulfilmentprocessOrderSplittingService" alias="orderSplittingService"/>
	<bean id="pentlandfulfilmentprocessOrderSplittingService" parent="defaultOrderSplittingService" >
		<property name="strategiesList">
			<list>
<!--				<ref bean="splitByAvailableCount"/>
				<ref bean="splitByDeliveryMode" />
				<ref bean="splitByPoS" />
				<ref bean="splitByNamedDeliveryDate" />
				<ref bean="splitByEntryDeliveryAddress" />
				<ref bean="splitByWarehouse" />-->
			</list>
		</property>
	</bean>
	
	<!-- Split Strategies -->
	
	<alias name="defaultSplitByPoS" alias="splitByPoS"/>
	<bean id="defaultSplitByPoS" class="com.bridgex.fulfilmentprocess.strategy.impl.SplitByPoS" />
	
	<alias name="defaultSplitByEntryDeliveryAddress" alias="splitByEntryDeliveryAddress"/>
	<bean id="defaultSplitByEntryDeliveryAddress" class="com.bridgex.fulfilmentprocess.strategy.impl.SplitByEntryDeliveryAddress"  />
	
	<alias name="defaultSplitByDeliveryMode" alias="splitByDeliveryMode"/>
	<bean id="defaultSplitByDeliveryMode" class="com.bridgex.fulfilmentprocess.strategy.impl.SplitByDeliveryMode" >
		<property name="pickupDeliveryModeDao" ref="pickupDeliveryModeDao"/>
	</bean>
	
	<alias name="defaultSplitByAvailableCount" alias="splitByAvailableCount"/>
	<bean id="defaultSplitByAvailableCount" class="com.bridgex.fulfilmentprocess.strategy.impl.SplitByAvailableCount" >
		<property name="commerceStockService" ref="commerceStockService"/>
	</bean>
	
	<alias name="defaultSplitByWarehouse" alias="splitByWarehouse"/>
	<bean id="defaultSplitByWarehouse" class="com.bridgex.fulfilmentprocess.strategy.impl.SplitByWarehouse">
		<property name="stockService" ref="stockService"/>
		<property name="commerceAvailabilityCalculationStrategy" ref="commerceStockLevelCalculationStrategy"/>
	</bean>
	
	<!--  Jobs -->
	
	<bean id="cleanUpFraudOrderJob" class="com.bridgex.fulfilmentprocess.jobs.CleanUpFraudOrderJob"  >
		<property name="modelService" ref="modelService"/>
		<property name="flexibleSearchService" ref="flexibleSearchService"/>
		<property name="businessProcessService" ref="businessProcessService"/>
		<property name="sessionService" ref="sessionService"/>
	</bean>

</beans>
