<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.

 This software is the confidential and proprietary information of SAP
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with SAP.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd 
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd">
	
	<context:annotation-config/>
	<bean id="pentlandFileOrderComparator" class="de.hybris.platform.acceleratorservices.dataimport.batch.FileOrderComparator">
		<property name="prefixPriority">
			<map>
				<!-- default priority is 0; todo set appropriate priorities -->
				<entry key="productmaster" value="2" />
				<entry key="productrich" value="3" />
				<entry key="media" value="3" />
				<entry key="price" value="1" />
				<entry key="b2bcustomer" value="1" />
				<entry key="customer" value="1" />
				<entry key="address" value="2" />
				<entry key="invoice" value="1" />
				<entry key="order" value="1" />
			</map>
		</property>
	</bean>
	<!-- product import -->
	<bean id="pentlandImpexProductHeader" class="java.lang.String">
		<constructor-arg>
			<!--to import both into Online and Staged - specify two impex headers in the value -->
			<value># ImpEx for importing data into $CATALOG$
				$catalog=$CATALOG$
				$catalogVersion=catalogversion(catalog(id[default=$CATALOG$]),version[default='Staged'])[unique=true]
				$baseProduct=baseProduct(code, catalogVersion(catalog(id[default=$CATALOG$]),version[default='Staged']))
				$lang=$LANGUAGE$</value>
		</constructor-arg>
	</bean>
	<bean id="baseDirectoryPentland" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/pentland"/>
	</bean>

	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesPentland" directory="#{baseDirectoryPentland}"
	                              filename-regex="^(.*)-(\d+)\.csv" comparator="pentlandFileOrderComparator"
	                              auto-startup="#{configurationService.configuration.getProperty('hotfolder.autostart')}">
		<int:poller fixed-rate="1000"/>
	</file:inbound-channel-adapter>

	<alias name="pentlandBatchRunnerTask" alias="batchRunnerTask"/>
	<bean id="pentlandBatchRunnerTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.AbstractImpexRunnerTask">
		<property name="sessionService" ref="sessionService" />
		<property name="importService" ref="hotfolderImportService" />
		<lookup-method name="getImportConfig" bean="importConfig" />
	</bean>

	<!-- 2) move the file to processing and create header -->
	<int:service-activator input-channel="pentlandBatchFilesHeaderInit" output-channel="pentlandBatchFilesHeader" ref="pentlandHeaderInitTask"
	                       method="execute" />
	<bean id="pentlandHeaderInitTask" parent="headerInitTask">
		<property name="fallbackLanguage" value="en" />
	</bean>

	<file:outbound-gateway request-channel="batchFilesPentland" reply-channel="batchFilesPentlandProc"
	                       directory="#{baseDirectoryPentland}/processing" delete-source-files="true"/>
	<int:service-activator input-channel="batchFilesPentlandProc" output-channel="pentlandBatchFilesHeaderInit" ref="pentlandHeaderSetupTask"
	                       method="execute"/>

	<bean id="pentlandHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="pentlandProductCatalog"/>
		<property name="net" value="false"/>
		<property name="storeBaseDirectory" ref="baseDirectoryPentland"/>
	</bean>

	<!-- 3) transform csv to impex file -->
	<int:service-activator input-channel="pentlandBatchFilesHeader" output-channel="batchFilesTran" ref="pentlandBatchTransformerTask"
	                       method="execute" />
	<bean id="pentlandBatchTransformerTask" parent="batchTransformerTask">
		<property name="fieldSeparator" value=";" />
	</bean>

	<!-- Transformer converters mappings -->
	<bean id="batchBaseProductConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="productmaster"
	      p:converter-ref="pentlandBatchBaseProductConverter"/>

	<bean id="batchStyleProductConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="productmaster"
	      p:converter-ref="pentlandBatchStyleProductConverter"/>

	<bean id="batchSizeProductConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="productmaster"
	      p:converter-ref="pentlandBatchSizeProductConverter"/>

	<bean id="batchRichProductConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="productrich"
	      p:converter-ref="pentlandBatchRichProductConverter"/>

	<alias name="batchProductPriceConverterMapping" alias="batchPriceConverterMapping"/>
	<bean id="batchProductPriceConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="price"
	      p:converter-ref="pentlandBatchProductPriceConverter"/>

	<bean id="batchMediaConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="media" 
		  p:converter-ref="pentlandBatchMediaConverter"/>

	<bean id="batchMediaContainerConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="media" 
		  p:converter-ref="pentlandBatchMediaContainerConverter"/>

	<bean id="batchMediaProductConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping" 
		  p:mapping="media" 
		  p:converter-ref="pentlandBatchMediaProductConverter"/>

	<bean id="batchParentB2BUnitConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="customer"
	      p:converter-ref="pentlandBatchParentB2BUnitConverter"/>

	<alias name="batchB2BUnitConverterMapping" alias="batchCustomerConverterMapping" />
	<bean id="batchB2BUnitConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="customer"
	      p:converter-ref="pentlandBatchB2BUnitConverter"/>

	<bean id="batchAddressConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="address"
	      p:converter-ref="pentlandBatchAddressConverter"/>

	<bean id="batchOrderConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="order"
	      p:converter-ref="pentlandBatchOrderConverter"/>

	<bean id="batchOrderStatusConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="orderstatus"
	      p:converter-ref="pentlandBatchOrderStatusConverter"/>

	<bean id="pentlandB2BCustomerConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="user"
	      p:converter-ref="pentlandBatchB2BCustomerConverter"/>

	<bean id="batchInvoiceConverterMapping"
	      class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
	      p:mapping="invoice"
	      p:converter-ref="pentlandBatchInvoiceConverter"/>

	<!-- Converters -->
	<!-- B2BUnit converters -->

	<bean id="pentlandBatchParentB2BUnitConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				INSERT_UPDATE B2BUnit;uid[unique=true];salesOrg;distCh;sapID;userPriceGroup(code)[type=UserPriceGroup,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];sapBrand;customerType(code);division(code);;name;locName[lang=en];active[default=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0}-{+1};{0};{1};;{+0}-{+1}-{+3};{4};{5};;{7};{8};{8}</value>
		</property>
	</bean>

	<bean id="pentlandBatchB2BUnitConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				INSERT_UPDATE B2BUnit;uid[unique=true];groups(uid);salesOrg;distCh;sapID;userPriceGroup(code)[type=UserPriceGroup,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];sapBrand;customerType(code);division(code);;name;locName[lang=en];active[default=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0}-{+1}-{+2};{+0}-{+1};{0};{1};{2};{+0}-{+1}-{+2};{4};{5};;{7};{8};{8}</value>
		</property>
	</bean>

	<!-- end of B2BUnit converters -->

	<!-- Address converters -->

	<bean id="pentlandBatchAddressConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				#% impex.enableCodeExecution(true)
				INSERT_UPDATE Address;owner(B2BUnit.uid);sapCustomerID[unique=true];addressID[unique=true];displayName[lang=en];country(isocode)[default='GB'];state;postalcode;town;streetname;streetnumber;district;building;appartment;department;markForAddresses(addressID);markForAddress[default=false];visibleInAddressBook[default=true];contactAddress[default=false];billingAddress[default=false];unloadingAddress[default=false];shippingAddress[default=true];
				#%groovy% beforeEach: line.put(1, pentlandB2BUnitService.getUnitBySapID(line.get(2)).getUid());
			</value>
		</property>
		<property name="impexRow">
			<value>;;{+0};{+1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{16};{17};{18};{19};</value>
		</property>
	</bean>

	<!-- End of Address converters -->


	<bean id="pentlandBatchBaseProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				$approved=approvalstatus(code)[default='check']
				INSERT_UPDATE Product;code[unique=true];sapBrand;unit(code)[default=pieces];season[lang=$lang];gender(code)[type=Gender,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];productGroup[lang=$lang];varianttype(code)[default=ApparelStyleVariantProduct];$catalogVersion;$approved;sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0};{6};{11};{12};{13};{17};;$catalog:Staged;;{S}
				;{+0};{6};{11};{12};{13};{17};;$catalog:Online;;{S}
			</value>
		</property>
	</bean>
	<bean id="pentlandBatchStyleProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				$approved=approvalstatus(code)[default='check']
				INSERT_UPDATE ApparelStyleVariantProduct;$baseProduct;code[unique=true];sapName;sapBrand;style[lang=$lang];primaryColors(code)[mode=replace,type=SwatchColorEnum,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];secColor[lang=$lang];unit(code)[default=pieces];season[lang=$lang];gender(code)[type=Gender,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];clearance;smu;productGroup[lang=$lang];varianttype(code)[default=ApparelSizeVariantProduct];$catalogVersion;$approved;sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0}:$catalog:Staged;{+1};{5};{6};{7};{8};{9};{11};{12};{13};{14};{16};{17};;$catalog:Staged;;{S}
				;{+0}:$catalog:Online;{+1};{5};{6};{7};{8};{9};{11};{12};{13};{14};{16};{17};;$catalog:Online;;{S}
			</value>
		</property>
	</bean>
	<bean id="pentlandBatchSizeProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				$approved=approvalstatus(code)[default='check']
				INSERT_UPDATE ApparelSizeVariantProduct;$baseProduct;sku;code[unique=true];upc;size[lang=$lang];unit(code);discontinuedStatus(code)[cellDecorator=com.bridgex.core.impex.decorator.DiscontinuedStatusCellDecorator];$catalogVersion;$approved;sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+1}:$catalog:Staged;{2};{+3};{4};{10};{11};{15};$catalog:Staged;;{S}
				;{+1}:$catalog:Online;{2};{+3};{4};{10};{11};{15};$catalog:Online;;{S}
			</value>
		</property>
	</bean>
	<bean id="pentlandBatchRichProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				$approved=approvalstatus(code)[default='approved']
				$mediaCatalog = pentlandMediaCatalog
				$mediaCV=catalogVersion(CatalogVersion.catalog(Catalog.id[default = $mediaCatalog]), CatalogVersion.version[default = 1.0])[default = $mediaCatalog:1.0]
				$classificationCatalog = pentlandClassificationCatalog
				$clAttrModifiers = system = '$classificationCatalog', version = '1.0', lang = $lang, translator = de.hybris.platform.catalog.jalo.classification.impex.ClassificationAttributeTranslator
				$teamwearType = @teamwearType[$clAttrModifiers];
				$trainingwearType = @trainingwearType[$clAttrModifiers];
				$sport = @sport[$clAttrModifiers];
				$accessoryType = @accessoryType[$clAttrModifiers];
				$useageOccasion = @useageOccasion[$clAttrModifiers];
				$surface = @surface[$clAttrModifiers];
				$trainingMethod = @trainingMethod[$clAttrModifiers];
				UPDATE ApparelStyleVariantProduct;code[unique=true];$catalogVersion;$approved;name[lang=$lang];description[lang=$lang];featureDescription[lang=$lang];packSize;videoURL;externalURL;sizeChartImage(code,$mediaCV);supercategories(code,$catalogVersion)[cellDecorator=com.bridgex.core.impex.decorator.CategoryCatalogVersionDecorator];$teamwearType;$trainingwearType;$sport;$accessoryType;$useageOccasion;$surface;$trainingMethod;sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0};$catalog:Staged;;{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{S}
				;{+0};$catalog:Online;;{1};{2};{3};{4};{5};{6};{7};{8};{9};{10};{11};{12};{13};{14};{15};{S}
			</value>
		</property>
	</bean>
	<bean id="pentlandBatchProductPriceConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				INSERT_UPDATE PriceRow;productId[unique = true];price;currency(isocode)[unique = true,default=GBP];ug(code)[unique =true,type=UserPriceGroup,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];startTime[dateformat='dd.MM.yyyy HH:mm',default='01.01.1900 00:00'];endTime[dateformat='dd.MM.yyyy HH:mm',default='31.12.3000 23:59'];unitFactor[default=1];minqtd[default=1];net[default=true];unit(code[unique = true])[cellDecorator=com.bridgex.core.impex.decorator.PriceProductUnitDecorator];sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1};{2};{3};;;;;;{+0};{S}</value>
		</property>
	</bean>
	<bean id="pentlandBatchMediaConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				# Import media from filesystem
				$mediaCatalog = pentlandMediaCatalog
				$mediaCV=catalogVersion(CatalogVersion.catalog(Catalog.id[default = $mediaCatalog]), CatalogVersion.version[default = 1.0])[default = $mediaCatalog:1.0]
				UPDATE GenericItem[processor=de.hybris.platform.commerceservices.impex.impl.ConfigPropertyImportProcessor];pk[unique=true]
				$importFolder=$config-mediaremotesource
				INSERT_UPDATE Media;mediaFormat(qualifier);code[unique=true];mime[default='image/jpeg'];$mediaCV;folder(qualifier)[default=product];realfilename;@media[translator=de.hybris.platform.impex.jalo.media.MediaDataTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;1200Wx1200H;{+2};;;;{+2};$importFolder/{+2}</value>
		</property>
	</bean>
	<bean id="pentlandBatchMediaContainerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				$mediaCatalog = pentlandMediaCatalog
				$mediaCV=catalogVersion(CatalogVersion.catalog(Catalog.id[default = $mediaCatalog]), CatalogVersion.version[default = 1.0])[default = $mediaCatalog:1.0]
				# Import media container
				INSERT_UPDATE MediaContainer;qualifier[unique=true];medias(code, $mediaCV)[mode=append];$mediaCV;conversionGroup(code)[default=galleryConversionGroup];
			</value>
		</property>
		<property name="impexRow">
			<value>;{+1};{2};;{3};</value>
		</property>
	</bean>
	<bean id="pentlandBatchMediaProductConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				#% impex.enableCodeExecution(true)
				$mediaCatalog = pentlandMediaCatalog
				$mediaCV=catalogVersion(CatalogVersion.catalog(Catalog.id[default = $mediaCatalog]), CatalogVersion.version[default = 1.0])[default = $mediaCatalog:1.0]
				$galleryImages=galleryImages(qualifier, $mediaCV)[mode=append]
				# Import product media
				UPDATE Product;code[unique=true];$galleryImages;$catalogVersion
				#%groovy% afterEach: productService.convertAssignedMedia(modelService.get(impex.getLastImportedItem()),line.get(2))
			</value>
		</property>
		<property name="impexRow">
			<value>
				;{+0};{1};
				;{+0};{1};$catalog:Online
			</value>
		</property>
	</bean>
	<bean id="pentlandBatchOrderConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				INSERT_UPDATE Order;code[unique=true];unit(uid)[unique=true];user[translator=com.bridgex.core.order.impex.translators.PentlandB2BUnitToUserTranslator];purchaseOrderNumber;status(code);date[dateformat='yyyy-MM-dd HH:mm:ss'];totalPrice;totalQty;orderType(code)[type=OrderType,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];rdd[dateformat='yyyy-MM-dd'];currency(isocode)[default=GBP];salesApplication(code)[default='SAP'];store(uid)[default=pentland];site(uid)[default=pentland];sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1};{+1};{2};{+3};{+4};{+5};{+6};{+7};{+8};{9};;;;{S}</value>
		</property>
	</bean>
	<bean id="pentlandBatchOrderStatusConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				UPDATE Order;code[unique=true];status(code)[type=OrderStatus,cellDecorator=com.bridgex.core.impex.decorator.DynamicEnumCellDecorator];sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1};{S}</value>
		</property>
	</bean>
	<bean id="pentlandBatchB2BCustomerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>#{pentlandImpexProductHeader}
				$defaultPassword=1000:03e09d25692029426e0c764546156206:7eb171c2523cd785269d3340b2d0546d345aa3394d8ae28c9c580221a3e609b8edc258c3bc75897056d6400c94380697a84d43b67450d86bc4ce0617eb58b68f
				INSERT B2BCustomer;uid[unique=true];email[unique=true];@b2bGroups[translator=com.bridgex.core.customer.impex.translators.B2BCustomerGroupsTranslator,default=b2bcustomergroup];name;groups(uid);division(code);sessionCurrency(isocode)[default=GBP];encodedPassword[default=$defaultPassword];passwordEncoding[default=pbkdf2];loginDisabled[default=false];sequenceId[translator=de.hybris.platform.acceleratorservices.dataimport.batch.converter.SequenceIdTranslator]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+0};{1};{+2} {+3};{+4};{5};{6};{7};{8};;{S}</value>
		</property>
	</bean>
	<bean id="pentlandBatchInvoiceConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				INSERT_UPDATE B2BDocument;documentnumber[unique=true];Unit(uid);amount;currency(isocode)[default=GBP];date[dateformat=yyyy-MM-dd];documentType(code)[default=Invoice];dueDate[dateformat=yyyy-MM-dd];openAmount;status(code)[default=open];
			</value>
		</property>
			<property name="impexRow">
				<value>;{+0};{+1};{+2};{3};{+4};{5};{+6};{+7};{8}</value>
			</property>
	</bean>

</beans>